{"version":3,"file":"lib/test/js/test.js","sources":["test/assignments.coffee","test/availabilities.coffee","test/contactEmailAddresses.coffee","test/contactPhoneNumbers.coffee","test/contacts.coffee","test/customData.coffee","test/customFields.coffee","test/events.coffee","test/init.coffee","test/locations.coffee","test/memberEmailAddresses.coffee","test/memberLinks.coffee","test/memberPhoneNumbers.coffee","test/memberPreferences.coffee","test/members.coffee","test/opponents.coffee","test/plans.coffee","test/setup.coffee","test/sports.coffee","test/teamPreferences.coffee","test/teamPublicSites.coffee","test/teams.coffee","test/trackedItemStatuses.coffee","test/trackedItems.coffee","test/users.coffee"],"names":[],"mappings":"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","sourcesContent":["describe 'Assignments', ->\n\n  it 'should be able to load all assignments for team', (done) ->\n    teamsnap.loadAssignments team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()","describe 'Availabilities', ->\n\n  it 'should be able to load all availabilities for team', (done) ->\n    teamsnap.loadAvailabilities team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()","describe 'Contact Email Addresses', ->\n\n  it 'should be able to load all contact email addresses for team', (done) ->\n    teamsnap.loadContactEmailAddresses team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()","describe 'Contact Phone Numbers', ->\n\n  it 'should be able to load all contact phone numbers for team', (done) ->\n    teamsnap.loadContactPhoneNumbers team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()","describe 'Contacts', ->\n\n  it 'should be able to load all contacts for team', (done) ->\n    teamsnap.loadContacts team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()","describe 'Custom Fields', ->\n\n  it 'should be able to load all custom fields for team', (done) ->\n    teamsnap.loadCustomData team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()\n","describe 'Custom Fields', ->\n\n  it 'should be able to load all custom fields for team', (done) ->\n    teamsnap.loadCustomFields team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()\n","describe 'Events', ->\n\n  it 'should be able to load all events for team', (done) ->\n    teamsnap.loadEvents team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()","chai.should()\nwindow.expect = chai.expect\n\nauthSection = document.getElementById('auth')\nauthButton = document.getElementById('auth-button')\napiInput = document.getElementById('api-url')\nauthInput = document.getElementById('auth-url')\nclientId = '1d228d706ce170d61f9368b5967bd7a1641e6ecf742434dc198047f1a36a930a'\nredirect = 'http://localhost:8000/'\nscopes = [\n  'read'\n  'write_contacts'\n  'write_contact_email_addresses'\n  'write_events'\n  'write_locations'\n  'write_opponents'\n  'write_refreshments'\n  'write_rosters'\n  'write_roster_email_addresses'\n  'write_rosters_preferences'\n  'write_teams'\n  'write_teams_preferences'\n  'write_teams_results'\n  'write_tracked_items'\n  'write_tracked_item_statuses'\n]\n\nif typeof localStorage isnt 'undefined' and\n    (url = localStorage.getItem 'teamsnap.apiUrl')\n  apiInput.value = url if url\n\nif typeof localStorage isnt 'undefined' and\n    (url = localStorage.getItem 'teamsnap.authUrl')\n  authInput.value = url if url\n\nteamsnap.apiUrl = apiInput.value\nteamsnap.authUrl = authInput.value\n\napiInput.addEventListener 'change', ->\n  teamsnap.apiUrl = apiInput.value\n  if typeof localStorage isnt 'undefined'\n    localStorage.setItem 'teamsnap.apiUrl', apiInput.value\n\nauthInput.addEventListener 'change', ->\n  teamsnap.authUrl = authInput.value\n  if typeof localStorage isnt 'undefined'\n    localStorage.setItem 'teamsnap.authUrl', authInput.value\n\nwhenAuthed = (sdk) ->\n  authSection.parentNode.removeChild authSection\n  sessionStorage.setItem 'collections', JSON.stringify(sdk.collections)\n  window.teamsnap = sdk\n  mocha.setup('bdd')\n  window.require.list().filter((_) -> /^test/.test(_)).forEach(require)\n  mocha.run()\nwhenAuthFailed = (sdk) ->\n  authSection.style.display = ''\n\nauthButton.addEventListener 'click', ->\n  authSection.style.display = 'none'\n  teamsnap.startBrowserAuth(redirect, scopes).then whenAuthed, whenAuthFailed\n\n\nteamsnap.init clientId\n\nif teamsnap.isAuthed()\n  authSection.style.display = 'none'\n  try\n    collections = JSON.parse sessionStorage.getItem 'collections'\n  teamsnap.auth(collections).then whenAuthed, whenAuthFailed\n","describe 'Locations', ->\n\n  it 'should be able to load all locations for team', (done) ->\n    teamsnap.loadLocations team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()","describe 'Member Email Addresses', ->\n  member = null\n  email = null\n\n  before (done) ->\n    member = teamsnap.createMember()\n    member.teamId = team.id\n    member.firstName = 'Test'\n    teamsnap.saveMember member, (err, result) ->\n      expect(err).to.be.null\n      done()\n  \n  after (done) ->\n    teamsnap.deleteMember member, (err, result) ->\n      expect(err).to.be.null\n      done()\n\n  \n  it 'should be able to load all member emails for team', (done) ->\n    teamsnap.loadMemberEmailAddresses team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()\n\n  \n  it 'should be able to create a member email', (done) ->\n    email = teamsnap.createMemberEmailAddress()\n    email.memberId = member.id\n    email.email = value = 'test@example.com'\n    teamsnap.saveMemberEmailAddress email, (err, result) ->\n      expect(err).to.be.null\n      result.should.have.property('email', value)\n      teamsnap.loadMemberEmailAddresses memberId: member.id, (err, result) ->\n        expect(err).to.be.null\n        result.should.be.an('array')\n        result.should.have.property('length', 1)\n        done()\n\n  \n  it 'should be able to update a member email', (done) ->\n    email.email = value = 'test2@example.com'\n    teamsnap.saveMemberEmailAddress email, (err, result) ->\n      expect(err).to.be.null\n      result.should.have.property('email', value)\n      done()\n\n  \n  it 'should be able to delete a member email', (done) ->\n    teamsnap.deleteMemberEmailAddress email, (err, result) ->\n      expect(err).to.be.null\n      teamsnap.loadMemberEmailAddresses memberId: member.id, (err, result) ->\n        expect(err).to.be.null\n        result.should.be.an('array')\n        result.should.have.property('length', 0)\n        done()\n\n","describe.skip 'Member Links', ->\n  member = null\n  link = null\n\n  before (done) ->\n    member = teamsnap.createMember()\n    member.teamId = team.id\n    member.firstName = 'Test'\n    teamsnap.saveMember member, (err, result) ->\n      expect(err).to.be.null\n      done()\n  \n  after (done) ->\n    teamsnap.deleteMember member, (err, result) ->\n      expect(err).to.be.null\n      done()\n\n\n  # Member links\n  it 'should be able to load all member links for team', (done) ->\n    teamsnap.loadMemberLinks team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()\n\n  \n  it 'should be able to create a member link', (done) ->\n    link = teamsnap.createMemberLink()\n    link.memberId = member.id\n    link.url = 'http://example.com'\n    link.description = value = 'An example'\n    teamsnap.saveMemberLink link, (err, result) ->\n      expect(err).to.be.null\n      result.should.have.property('description', value)\n      teamsnap.loadMemberLinks memberId: member.id, (err, result) ->\n        expect(err).to.be.null\n        result.should.be.an('array')\n        result.should.have.property('length', 1)\n        done()\n\n  \n  it 'should be able to update a member link', (done) ->\n    link.description = value = 'Changed text'\n    teamsnap.saveMemberLink link, (err, result) ->\n      expect(err).to.be.null\n      result.should.have.property('description', value)\n      done()\n\n  \n  it 'should be able to delete a member link', (done) ->\n    teamsnap.deleteMemberLink link, (err, result) ->\n      expect(err).to.be.null\n      teamsnap.loadMemberLinks memberId: member.id, (err, result) ->\n        expect(err).to.be.null\n        result.should.be.an('array')\n        result.should.have.property('length', 0)\n        done()\n","describe 'Member Phone Numbers', ->\n  member = null\n  phone = null\n\n  before (done) ->\n    member = teamsnap.createMember()\n    member.teamId = team.id\n    member.firstName = 'Test'\n    teamsnap.saveMember member, (err, result) ->\n      expect(err).to.be.null\n      done()\n  \n  after (done) ->\n    teamsnap.deleteMember member, (err, result) ->\n      expect(err).to.be.null\n      done()\n\n\n  it 'should be able to load all member phones for team', (done) ->\n    teamsnap.loadMemberPhoneNumbers team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()\n\n  \n  it 'should be able to create a member phone', (done) ->\n    phone = teamsnap.createMemberPhoneNumber()\n    phone.memberId = member.id\n    phone.url = 'http://example.com'\n    phone.phoneNumber = value = 'An example'\n    teamsnap.saveMemberPhoneNumber phone, (err, result) ->\n      expect(err).to.be.null\n      result.should.have.property('phoneNumber', value)\n      teamsnap.loadMemberPhoneNumbers memberId: member.id, (err, result) ->\n        expect(err).to.be.null\n        result.should.be.an('array')\n        result.should.have.property('length', 1)\n        done()\n\n  \n  it 'should be able to update a member phone', (done) ->\n    phone.phoneNumber = value = 'Changed text'\n    teamsnap.saveMemberPhoneNumber phone, (err, result) ->\n      expect(err).to.be.null\n      result.should.have.property('phoneNumber', value)\n      done()\n\n  \n  it 'should be able to delete a member phone', (done) ->\n    teamsnap.deleteMemberPhoneNumber phone, (err, result) ->\n      expect(err).to.be.null\n      teamsnap.loadMemberPhoneNumbers memberId: member.id, (err, result) ->\n        expect(err).to.be.null\n        result.should.be.an('array')\n        result.should.have.property('length', 0)\n        done()\n","describe 'Member Preferences', ->\n\n  it 'should be able to load preferences for members', (done) ->\n    teamsnap.loadMembersPreferences userId: teamsnap.me.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()\n\n\n  it 'should be able to load preferences for member', (done) ->\n    teamsnap.loadMemberPreferences team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.have.property('type', 'memberPreferences')\n      done()\n","describe 'Members', ->\n  member = null\n  email = null\n  phone = null\n  link = null\n\n\n  it 'should be able to load all members for team', (done) ->\n    teamsnap.loadMembers team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()\n\n\n  it 'should be able to create a member', (done) ->\n    member = teamsnap.createMember()\n    member.teamId = team.id\n    member.firstName = 'Test'\n    teamsnap.saveMember member, (err, result) ->\n      expect(err).to.be.null\n      result.should.have.property('type', 'member')\n      done()\n\n\n  it 'should be able to delete a member', (done) ->\n    teamsnap.deleteMember member, (err, result) ->\n      expect(err).to.be.null\n      done()","describe 'Opponents', ->\n\n  it 'should be able to load all opponents for team', (done) ->\n    teamsnap.loadOpponents team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()","describe 'Plans', ->\n\n  it 'should be able to load all plans', ->\n    expect(teamsnap.plans).to.be.an('array')\n\n  it 'should be able to query plan for team', (done) ->\n    teamsnap.loadPlans teamId: team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      result.should.have.property('length', 1)\n      result[0].should.have.property('type', 'plan')\n      done()\n\n  it 'should be able to load plan for team', (done) ->\n    teamsnap.loadPlan team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.have.property('type', 'plan')\n      done()","before (done) ->\n  window.team = teamsnap.createTeam\n    name: 'Test Team'\n    sportId: 1\n    planId: 30\n    locationCountry: 'United States'\n    locationPostalCode: 80302\n    timeZone: 'America/Denver'\n  mocha.checkLeaks()\n  teamsnap.saveTeam team, done\n\nafter (done) ->\n  teamsnap.deleteTeam team, done\n","describe 'Sports', ->\n\n  it 'should be able to load all sports', ->\n    expect(teamsnap.sports).to.be.an('array')\n\n  it 'should be able to query sport for team', (done) ->\n    teamsnap.loadSports teamId: team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      result.should.have.property('length', 1)\n      result[0].should.have.property('type', 'sport')\n      done()\n\n  it 'should be able to load sport for a team', (done) ->\n    teamsnap.loadSport team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.have.property('type', 'sport')\n      done()","describe 'Team Preferences', ->\n\n  it 'should be able to load preferences for teams', (done) ->\n    teamsnap.loadTeamsPreferences userId: teamsnap.me.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()\n\n  it 'should be able to load team preferences', (done) ->\n    teamsnap.loadTeamPreferences team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.have.property('type', 'teamPreferences')\n      done()\n","describe 'Team Public Sites', ->\n\n  it 'should be able to load team public site info', (done) ->\n    teamsnap.loadTeamPublicSite team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.have.property('type', 'teamPublicSite')\n      done()","describe 'Teams', ->\n  newTeam = null\n\n  it 'should be able to load all teams', (done) ->\n    teamsnap.loadTeams (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()\n\n  it 'should be able to load a teams data in bulk', (done) ->\n    teamsnap.bulkLoad team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()\n\n  it 'should be able to create a new team', (done) ->\n    newTeam = teamsnap.createTeam\n      name: 'New Test Team'\n      sportId: 1\n      locationCountry: 'United States'\n      locationPostalCode: 80302\n      timeZone: 'America/Denver'\n\n    teamsnap.saveTeam newTeam, (err, result) ->\n      expect(err).to.be.null\n      result.should.have.property('type', 'team')\n      result.should.have.property('id')\n      result.should.equal(newTeam)\n      done()\n\n  it 'should be able to delete a team', (done) ->\n    teamsnap.deleteTeam newTeam, (err, result) ->\n      expect(err).to.be.null\n      done()\n","describe 'Tracked Item Statuses', ->\n\n  it 'should be able to load all tracked item statuses for a team', (done) ->\n    teamsnap.loadTrackedItemStatuses team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()\n","describe 'Tracked Items', ->\n\n  it 'should be able to load all tracked items for a team', (done) ->\n    teamsnap.loadTrackedItems team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()\n","describe 'Users', ->\n\n  it 'should be able to load all users for team', (done) ->\n    teamsnap.loadUsers team.id, (err, result) ->\n      expect(err).to.be.null\n      result.should.be.an('array')\n      done()\n"]}